@model TrashPickupWebApplication.ViewModels.ClientInfoViewModel
@{
    ViewBag.Title = "ContactInfo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>ContactInfo</h2>

@using (Html.BeginForm("ContactInfo", "Registration"))
{
    <br />
    <br />
    <br />
    <div class="form-group">
        @Html.LabelFor(m => m.User.FirstName, "First Name", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.User.FirstName, "First Name", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.User.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <br />
    <br />
    <div class="form-group">
        @Html.LabelFor(m => m.User.LastName, "Last Name", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.User.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.User.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <br />
    <div class="form-group">
        @Html.LabelFor(m => m.User.Address.StreetAddress, "Street Address", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.User.Address.StreetAddress, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.User.Address.StreetAddress, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <br />
    <div class="form-group">
        @Html.LabelFor(m => m.User.Address.City, "City", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.User.Address.City, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.User.Address.City, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <br />
    <div class="form-group">
        @Html.LabelFor(m => m.User.Address.State, "State", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.User.Address.State, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.User.Address.State, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <br />
    <div class="form-group">
        @Html.LabelFor(m => m.User.Address.Zipcode, "Zipcode", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.User.Address.Zipcode, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.User.Address.Zipcode, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <br />
    <div class="form-group">
        @Html.LabelFor(m => m.AccountType, "Account Type", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
           
            @Html.DropDownListFor(m => m.AccountType, new SelectList( ViewBag.AccountTypes, "Account Type" ), "Choose your flavor", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.AccountType, "", new { @class = "text-danger" })
        </div>
    </div>
        <br />
        <br />
        @Html.HiddenFor(m => m.User.ID)
        @Html.AntiForgeryToken()

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Submit" />
            </div>
        </div>
}
        @section Scripts
{
            @Scripts.Render("~/bundles/jqueryval")
        }
